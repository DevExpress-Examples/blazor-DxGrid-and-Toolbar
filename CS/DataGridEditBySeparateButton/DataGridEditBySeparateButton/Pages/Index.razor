@page "/"

@using DataGridEditBySeparateButton.Data
@inject WeatherForecastService ForecastService

@if (forecasts == null) {
    <h1>Loading...</h1>
}
else {
    <DxDataGrid Data=@forecasts 
                ShowFilterRow=false 
                @bind-SingleSelectedDataRow="@selectedForecast" 
                @ref="MyGrid"
                RowUpdating=@((updatingDataItem, newValues) => OnRowUpdating(updatingDataItem, newValues))>
        <DxDataGridColumn Field=@nameof(WeatherForecast.TemperatureC) Caption="Temp. (C)"></DxDataGridColumn>
        <DxDataGridColumn Field=@nameof(WeatherForecast.TemperatureF) Caption="Temp. (F)" EditorVisible="false"></DxDataGridColumn>
        <DxDataGridColumn Field=@nameof(WeatherForecast.Summary) Caption="Summary"></DxDataGridColumn>
        <DxDataGridDateEditColumn Field=@nameof(WeatherForecast.Date) DisplayFormat="dd/MM/yyyy"
               EditorDisplayFormat="dd/MM/yyyy"></DxDataGridDateEditColumn>
    </DxDataGrid>
}
<button id="editButton" @onclick="@(() => { Edit(); })">Edit</button>
<button id="deleteButton" @onclick="@(() => { Delete(); })">Delete</button>

@code {
    DevExpress.Blazor.DxDataGrid<WeatherForecast>? MyGrid;
    WeatherForecast[]? forecasts;
    WeatherForecast? selectedForecast;

    protected override async Task OnInitializedAsync() {
        forecasts = await ForecastService.GetForecastAsync();
    }

    void Edit() {
        if (selectedForecast != null) {
            MyGrid.StartRowEdit(selectedForecast);
        }
    }

    async void OnRowUpdating(WeatherForecast dataItem, Dictionary<string, object> newValue) {
        forecasts = await ForecastService.Update(dataItem, newValue);
    }

    async void Delete() {
        if (selectedForecast != null) {
            forecasts = await ForecastService.Remove(selectedForecast);
        }
    }
}
